name: Backend

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
    paths:
      - pizza-backend/**

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

#Special permissions required for OIDC authentication
permissions:
  id-token: write
  contents: read

jobs:
  build-image:
    name: 'Build backend image'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./pizza-backend

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@dbbdc275be76ac10734476cc723d82dfe7ec6eda # v3.4.2

    - name: Build with Gradle
      run: |
        chmod +x ./gradlew
        ./gradlew build

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and push
      uses: docker/build-push-action@v6
      with:
        context: ./pizza-backend
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/pizza-selector-backend:${{ github.sha }}

    - name: Send Metrics to New Relic
      run: |
        START_TIME=${{ github.event.workflow_job.created_at }}
        END_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        echo "Start: $START_TIME"
        echo "End: $END_TIME"

        DURATION=$((END_TIME - START_TIME))
        echo "Total build time: $DURATION seconds"
        curl -X POST "https://api.newrelic.com/v2/metrics" -H "X-Api-Key: ${{ secrets.NEW_RELIC_KEY }}" -d '{"metrics": [{"name": "build.duration", "value": $DURATION}]}'

  deploy-dev:
    runs-on: ubuntu-latest
    environment: DEV
    needs: build-image

    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: pizza-selector-be-dev
          images: '${{ secrets.DOCKERHUB_USERNAME }}/pizza-selector-backend:${{ github.sha }}'

      - name: Check http status code of production site
        uses: lakuapik/gh-actions-http-status@v1
        with:
          sites: '["https://pizza-selector-be-dev.azurewebsites.net/actuator/health/smoke"]'
          expected: '[200]'

  deploy-prod:
    runs-on: ubuntu-latest
    environment: PROD
    needs: deploy-dev

    steps:
      - name: 'Login via Azure CLI'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: pizza-selector-be-prod
          images: '${{ secrets.DOCKERHUB_USERNAME }}/pizza-selector-backend:${{ github.sha }}'